global !p

def math():
	return vim.eval('vimtex#syntax#in_mathzone()') == '1'
	
endglobal

# environment #

context "math()"
snippet beg "begin{} / end{}" bA
\\begin{$1}
	$0
\\end{$1}
endsnippet

context "math()"
snippet ali "Aligned" bA
\\begin{aligned}
	${1:${VISUAL}}
\\end{aligned}$0
endsnippet

context "math()"
snippet case "cases" wA
\\begin{cases}
	${1:${VISUAL}}
\\end{cases}$0
endsnippet

snippet mk "inline Math" wA
$${1:${VISUAL}}$$0
endsnippet

# script #

context "math()"
snippet '([A-Za-z])(\d)' "auto subscript" wrA
`!p snip.rv = match.group(1)`_`!p snip.rv = match.group(2)`
endsnippet

context "math()"
snippet '([A-Za-z])_(\d\d)' "auto subscript2" wrA
`!p snip.rv = match.group(1)`_{`!p snip.rv = match.group(2)`}
endsnippet

context "math()"
snippet __ "subscript" iA
_{${1:i}}$0
endsnippet

context "math()"
snippet td "superscript" iA
^{${1:2}}$0
endsnippet

context "math()"
snippet // "Fraction" iA
\\dfrac{$1}{$2}$0
endsnippet

snippet / "Fraction" i
\\dfrac{${VISUAL}}{$1}$0
endsnippet

priority 10
context "math()"
snippet '((\d+)|(\d*)(\\)?([A-Za-z]+)((\^|_)(\{\d+\}|\d))*)/' "symbol frac" wrA
\\dfrac{`!p snip.rv = match.group(1)`}{$1}$0
endsnippet

priority 100
context "math()"
snippet '^.*\)/' "() Fraction" wrA
`!p
stripped = match.string[:-1]
depth = 0
i = len(stripped) - 1
while True:
	if stripped[i] == ')': depth += 1
	if stripped[i] == '(': depth -= 1
	if depth == 0: break;
	i-=1
snip.rv = stripped[0:i] + "\\dfrac{" + stripped[i+1:-1] + "}"
`{$1}$0
endsnippet

priority 10
context "math()"
snippet "bar" "bar" iA
\overline{${1:${VISUAL}}}$0
endsnippet

priority 100
context "math()"
snippet "(\\?[a-zA-Z]\w*)bar" "bar" riA
\overline{`!p snip.rv=match.group(1)`}
endsnippet

priority 10
context "math()"
snippet "hat" "hat" iA
\hat{${1:${VISUAL}}}$0
endsnippet

priority 100
context "math()"
snippet "(\\?[a-zA-Z]\w*)hat" "hat" riA
\hat{`!p snip.rv=match.group(1)`}
endsnippet

priority 10
context "math()"
snippet bf "mathbf" iA
\mathbf{${1:${VISUAL}}}$0
endsnippet

context "math()"
priority 100
snippet '(\\?[a-zA-Z]\w*)bf' "mathbf" riA
\mathbf{`!p snip.rv=match.group(1)`}
endsnippet

priority 10
context "math()"
snippet rm "mathrm" iA
\mathrm{${1:${VISUAL}}}$0
endsnippet

context "math()"
priority 100
snippet '(\\?[a-zA-Z]\w*)rm' "mathrm" riA
\mathrm{`!p snip.rv=match.group(1)`}
endsnippet

context "math()"
snippet tt "text" iA
\text{${1:${VISUAL}}}$0
endsnippet

context "math()"
snippet tit "text it" iA
\textit{${1:${VISUAL}}}$0
endsnippet

context "math()"
snippet mcal "mathcal" iA
\mathcal{${1:${VISUAL}}}$0
endsnippet

context "math()"
snippet mbb "mathbb" iA
\mathbb{${1:${VISUAL}}}$0
endsnippet

context "math()"
snippet mscr "mathscr" iA
\mathscr{${1:${VISUAL}}}$0
endsnippet

context "math()"
snippet lrc "ceil" i
\left\lceil ${1:${VISUAL}} \right\rceil $0
endsnippet

context "math()"
snippet lrf "floor" i
\left\lfloor ${1:${VISUAL}} \right\rfloor $0
endsnippet

context "math()"
snippet lrb "left( right)" i
\left( ${1:${VISUAL}} \right) $0
endsnippet

context "math()"
snippet lrB "left\{ right\}" i
\left\\{ ${1:${VISUAL}} \right\\}$0
endsnippet

context "math()"
snippet lr[ "left[ right]" i
\left[ ${1:${VISUAL}} \right]$0
endsnippet

context "math()"
snippet lrt "leftangle rightangle" i
\left< ${1:${VISUAL}} \right>$0
endsnippet

context "math()"
snippet lrn "norm" i 
\left\Vert ${1:${VISUAL}} \right\Vert $0
endsnippet

context "math()"
snippet lra "abstract value" i 
\left\vert ${1:${VISUAL}} \right\vert $0
endsnippet

context "math()"
snippet pmat "pmat" iA
\begin{pmatrix} $1 \end{pmatrix} $0
endsnippet

context "math()"
snippet bmat "bmat" iA
\begin{bmatrix} $1 \end{bmatrix} $0
endsnippet

context "math()"
snippet sum "sum" w
\\sum_{${1:n=${2:1}}}^{${3:\infty}} 
endsnippet

context "math()"
snippet lim "limit" w
\\lim_{${1:n} \to ${2:\infty}} 
endsnippet

context "math()"
snippet prod "product" w
\\prod_{${1:n=${2:1}}}^{${3:\infty}} ${4:${VISUAL}} $0
endsnippet

context "math()"
snippet dint "integral" w
\\int_{${1:-\infty}}^{${2:\infty}} ${3:${VISUAL}} \\,\\mathrm{d}${4:x}$0
endsnippet

context "math()"
snippet part "d/dx" w
\\dfrac{\partial ${1:y}}{\partial ${2:x}}$0
endsnippet

context "math()"
snippet diff "d/dx" w
\dfrac{\mathrm{d}${1:y}}{\mathrm{d}${2:x}}$0
endsnippet

context "math()"
snippet sq "\sqrt{}" iA
\sqrt{${1:${VISUAL}}}$0
endsnippet

context "math()"
snippet opn "math function" wA
\operatorname{${1:${VISUAL}}}$0
endsnippet

context "math()"
snippet range "i = 1, \ldots, n" w
${1:i} = ${2:1}, \ldots, ${3:n} $0
endsnippet

context "math()"
snippet dis "displaystyle" iA
\displaystyle 
endsnippet

context "math()"
snippet CC "binom" iA
\dbinom{$1}{$2}$0
endsnippet

# symbols #

context "math()"
priority 10
snippet '\s*\.\.\.' "smart cdots" irA
\cdots 
endsnippet

context "math()"
priority 100
snippet '(?<=[,;])(\s*)\.\.\.' "smart ldots" irA
\ldots
endsnippet

snippet == "equals" iA
&= ${1:${VISUAL}}$0 \\\\
endsnippet

snippet != "equals" iA
\neq 
endsnippet

priority 10
context "math()"
snippet => "Right arrow" iA
\implies
endsnippet

context "math()"
snippet =< "Left arrow" iA
\impliedby
endsnippet

priority 10
context "math()"
snippet -> "right arrow" iA
\to 
endsnippet

context "math()"
priority 100
snippet <=> "if and only if" iA
\iff
endsnippet

priority 100
context "math()"
snippet <-> "left right arrow" iA
\leftrightarrow 
endsnippet

context "math()"
snippet !> "mapsto" iA
\mapsto 
endsnippet

context "math()"
snippet '(?<![\\a-zA-Z])(sin|cos|arccot|cot|csc|ln|log|exp|star|perp|arcsin|arccos|arctan|arccot|arccsc|arcsec|pi|zeta|oint|iiint|iint|int|ell|notin|mu|alpha|sigma|rho|beta|gamma|delta|zeta|eta|theta|iota|kappa|vartheta|nu|pi|rho|tau|upsilon|varphi|phi|chi|psi|omega|Gamma|Delta|Theta|Lambda|Xi|Pi|Sigma|Upsilon|Phi|Psi|Omega|aleph|vee|equiv|quad|max|min|deg|det)' "function" wrA
\\`!p snip.rv = match.group(1)`
endsnippet

context "math()"
snippet inf "\infty" iA
\infty
endsnippet

context "math()"
snippet EE "exists" iA
\exists 
endsnippet

context "math()"
snippet AA "forall" iA
\forall 
endsnippet

context "math()"
snippet xx "cross" iA
\times 
endsnippet

context "math()"
snippet ** "cdot" iA
\cdot 
endsnippet

context "math()"
snippet oo "circ" iA
\circ 
endsnippet

context "math()"
snippet and "and" iA
\wedge 
endsnippet

context "math()"
snippet cc "subset" iA
\subset 
endsnippet

context "math()"
snippet cC "subseteq" iA
\subseteq 
endsnippet

context "math()"
snippet ets "empty set" iA
\varnothing 
endsnippet

context "math()"
snippet o+ "oplus" iA
\oplus 
endsnippet

context "math()"
snippet o* "otimes" iA
\otimes 
endsnippet

priority 10
context "math()"
snippet eps "epsilon" iA
\epsilon 
endsnippet

priority 100
context "math()"
snippet veps "varepsilon" iA
\varepsilon 
endsnippet

context "math()"
snippet NN "cap" iA
\cap 
endsnippet

context "math()"
snippet UU "cup" iA
\cup 
endsnippet

context "math()"
snippet '<=[^>]' "leq" rA
\leqslant 
endsnippet

context "math()"
snippet >= "geq" iA
\geqslant 
endsnippet

context "math()"
snippet >> ">>" iA
\gg 
endsnippet

context "math()"
snippet << "<<" iA
\ll 
endsnippet

context "math()"
snippet ~~ "sim" iA
\sim 
endsnippet

context "math()"
snippet bec "because" iA
\because{}
endsnippet

context "math()"
snippet thf "therefore" iA
\therefore{}
endsnippet

context "math()"
snippet lmd "lambda" iA
\lambda 
endsnippet

context "math()"
snippet nabl "nabla" iA
\nabla 
endsnippet

context "math()"
snippet lll "l" iA
\ell
endsnippet

context "math()"
snippet \\\ "setminus" iA
\setminus
endsnippet

context "math()"
snippet || "mid" iA
\mid 
endsnippet
